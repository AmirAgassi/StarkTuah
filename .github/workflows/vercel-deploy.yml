name: Deploy to Vercel

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '9.13.2'

      - name: Install Dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Update tsconfig
        working-directory: ./frontend
        run: |
          cat > tsconfig.app.json << 'EOF'
          {
            "compilerOptions": {
              "target": "ES2020",
              "useDefineForClassFields": true,
              "lib": ["ES2020", "DOM", "DOM.Iterable"],
              "module": "ESNext",
              "skipLibCheck": true,
              "moduleResolution": "bundler",
              "allowImportingTsExtensions": true,
              "resolveJsonModule": true,
              "isolatedModules": true,
              "noEmit": true,
              "jsx": "react-jsx",
              "strict": false,
              "noUnusedLocals": false,
              "noUnusedParameters": false,
              "noFallthroughCasesInSwitch": false,
              "allowJs": true
            },
            "include": ["src"]
          }
          EOF

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: ./frontend
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: ./frontend
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        working-directory: ./frontend
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --yes
          else
            vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
          fi